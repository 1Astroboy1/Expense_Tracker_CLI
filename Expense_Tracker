import json
from collections import defaultdict
from datetime import datetime

class ExpenseTracker:
    def __init__(self):
        self.expense = []

    def add_notes(self, description: str, amount: float):
        expense = {
            "description" : description,
            "amount" : amount,
            "timestamp" : datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        }
        self.expense.append(expense)
        print("Expense added")

    def view_expense(self):
        expenses = load_from_file()
        total = 0.0
        if not self.expense:
            print("Expense not found")
        if self.expense:
            print("Your expense :")
            for i, e in enumerate(self.expense, 1):
                print(f"{i}. {e['description']} - {e['amount']} THB [{e['timestamp']}]")

            for exp in expenses:
                print(f"{exp['date']} - {exp['category']}: {exp['amount']} THB")
                total += exp['amount']
            print(f"\n Total: {total:.2f} THB")
        

    def save_to_file(self, filename):
        try:
            with open(filename, "w", encoding = "utf-8") as f:
                json.dump(self.expenses, f, ensure_ascii=False, indent=4)
            print("Expense save successfully")
                
        except Exception as e:
            print(f"Error saving file: {e}")

    def load_from_file(self, filename):
        try:
            with open(filename, "r", encoding="utf-8") as f:
                self.expenses = json.load(f)
            print("Notes loaded successfully.")
            
        except FileNotFoundError:
            print("File not found.")

def main():
    ex = ExpenseTracker()

    while True:
        print("\n=== NotePad CLI ===")
        print("1. Add Expense")
        print("2. View Expense")
        print("3. Save Expense to File")
        print("4. Load Expense from File")
        print("5. Exit")

        choice = input("Choose an option (1-6): ")

        if choice == "1":
            desc = input("Description: ")
            try:
                amount = float(input("Amount: "))
                tracker.add_expense(desc, amount)

            except ValueError:
                print("Please enter a valid number.")

        elif choice == "2":
            ex.view_notes()

        elif choice == "3":
            filename = input("Filename (e.g. data.json): ")
            ex.save_to_file(filename)

        elif choice == "4":
            filename = input("Enter filename to load: ")
            ex.load_to_file(filename)

        elif choice == "5":
            print("Goodbye!")
            break

        else:
            print("Invalid choice. Please choose between 1-6.")

if __name__ == "__main__":
    run_cli()
